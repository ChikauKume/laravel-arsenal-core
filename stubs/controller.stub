<?php

namespace {{ namespace }};

/**
 * -----------------------------------------------------------------
 * LAC Auto-generated Controller
 * -----------------------------------------------------------------
 * This file was generated by lac:scaffold.
 *
 * @copyright Copyright (c) 2025 Chikau Kume
 *
 * Note: If you run lac:scaffold for this resource again,
 * any changes made to this file will be overwritten.
 *
 * @generated {{ generatedAt }}
 * -----------------------------------------------------------------
*/

use {{ modelNamespace }}\{{ model }};
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Http\Requests\{{ model }}\StoreRequest;
use App\Http\Requests\{{ model }}\UpdateRequest;
use App\Services\{{ model }}Service;

class {{ class }} extends Controller {
    /**
     * The {{ model }} service instance.
     *
     * @var {{ model }}Service
     */
    protected ${{ modelVariable }}Service;

    /**
     * Create a new controller instance.
     *
     * @param {{ model }}Service ${{ modelVariable }}Service
     * @return void
     */
    public function __construct({{ model }}Service ${{ modelVariable }}Service) {
        $this->{{ modelVariable }}Service = ${{ modelVariable }}Service;
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index() {
        ${{ modelVariablePlural }} = $this->{{ modelVariable }}Service->getAllPaginated();
        
        return view('{{ modelVariablePlural }}.index', compact('{{ modelVariablePlural }}'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create() {
        return view('{{ modelVariablePlural }}.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \App\Http\Requests\{{ model }}\StoreRequest  $request
     * @return \Illuminate\Http\Response
     */
    public function store(StoreRequest $request) {
        ${{ modelVariable }} = $this->{{ modelVariable }}Service->create($request->validated());
        
        return redirect()->route('{{ modelVariablePlural }}.show', ${{ modelVariable }})
                         ->with('success', '{{ model }} created successfully.');
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{ modelNamespace }}\{{ model }}  ${{ routeParameter }}
     * @return \Illuminate\Http\Response
     */
    public function show({{ model }} ${{ routeParameter }}) {
        return view('{{ modelVariablePlural }}.show', compact('{{ modelVariable }}'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \{{ modelNamespace }}\{{ model }}  ${{ routeParameter }}
     * @return \Illuminate\Http\Response
     */
    public function edit({{ model }} ${{ routeParameter }}) {
        return view('{{ modelVariablePlural }}.edit', compact('{{ modelVariable }}'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \App\Http\Requests\{{ model }}\UpdateRequest  $request
     * @param  \{{ modelNamespace }}\{{ model }}  ${{ routeParameter }}
     * @return \Illuminate\Http\Response
     */
    public function update(UpdateRequest $request, {{ model }} ${{ routeParameter }}) {
        $this->{{ modelVariable }}Service->update(${{ routeParameter }}, $request->validated());
        
        return redirect()->route('{{ modelVariablePlural }}.show', ${{ routeParameter }})
                         ->with('success', '{{ model }} updated successfully.');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{ modelNamespace }}\{{ model }}  ${{ routeParameter }}
     * @return \Illuminate\Http\Response
     */
    public function destroy({{ model }} ${{ routeParameter }}) {
        $this->{{ modelVariable }}Service->delete(${{ routeParameter }});
        
        return redirect()->route('{{ modelVariablePlural }}.index')
                         ->with('success', '{{ model }} deleted successfully.');
    }
}